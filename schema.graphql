type Count @entity {
  id: Bytes! #CoCoChainProduct
  farmerAmount: BigInt!

  harvestTotal: BigInt!
}

type AnalysisDaily @entity {
  id: Bytes!
  date: BigInt!
  event: BigInt!
}

type Farmer @entity {
  id: Bytes!
  product: CoCoChainProduct!
  walletAddress: Bytes!
  metadata: String!
  active: Boolean!
}

type Request @entity {
  id: Bytes!
  cocoChainId: BigInt!
  farmer: Farmer!
  accepted: Boolean!
}

type CoCoChainProduct @entity {
  id: Bytes!
  cocoChainId: BigInt! #This id is get from the smart contract
  metadata: String!
  active: Boolean!

  farmers: [Farmer!]!
}

type Event @entity {
  id: Bytes!
  product: AgriculturalProduct! #AgriculturalProduct.id
  metadata: String!
  eventType: EventType!
  performer: Bytes!
  createdAt: BigInt!
}

type HarvestEvent @entity {
  id: Bytes!
  product: AgriculturalProduct!
  metadata: String!
  eventType: EventType!
  performer: Bytes!
  delivered: Boolean!
  createdAt: BigInt!
}

type AgriculturalProduct @entity {
  id: Bytes!
  tokenId: BigInt!
  cocoChain: CoCoChainProduct!
  farmer: Farmer!

  event: [Event!] @derivedFrom(field: "product")
  harvest: [HarvestEvent!] @derivedFrom(field: "product")
  eventCount: BigInt!
  harvestCount: BigInt!
}

enum EventType {
  PLANT
  FERTILIZER
  SPRAY
  WATER
  HARVEST
  DELIVERY
}
